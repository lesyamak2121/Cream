From: Steffen Wendzel <cdp_xeREMOVE_THIS_TO_GET_MY_ADDR@gmx.net>
To: misc@openbsd.org
Cc: tech@openbsd.org
Subject: [PATCH] Re: Denial of service via FD exhaustion
Date: Sat, 5 Aug 2006 14:25:59 +0000
X-Mailer: Sylpheed version 2.0.2 (GTK+ 2.4.14; i386-unknown-openbsd3.6)

Hi Alex,

I wrote such a Code for my OpenBSD 3.6 machine. I just loaded the current
CVS snapshot, patched the sources and made a CVS diff. Here is a patch
that implements a new sysctl variable called 'kern.maxusrfiles' what is
the maximum number of filedescriptors available for normal users. 64 FDs
are reserved for root only.

I wasn't able to test the patches on a current kernel because there would
be too much to update on my 3.6 box.

I post this to @tech too. Maybe someone want to implement this in the
official kernel.

best regards
steffen


Here are the patches:

src/sbin/sysctl directory:

==> cvs diff -up
cvs server: Diffing .
Index: sysctl.8
===================================================================
RCS file: /cvs/src/sbin/sysctl/sysctl.8,v
retrieving revision 1.132
diff -u -p -r1.132 sysctl.8
--- sysctl.8    29 May 2006 16:49:42 -0000      1.132
+++ sysctl.8    5 Aug 2006 12:17:34 -0000
@@ -128,6 +128,7 @@ not all of the variables are relevant to
 .It kern.maxvnodes     integer yes
 .It kern.maxproc       integer yes
 .It kern.maxfiles      integer yes
+.It kern.maxusrfiles   integer yes
 .It kern.argmax        integer no
 .It kern.securelevel   integer raise only
 .It kern.hostname      string  yes


src/sys/kern directory:

==> cvs diff -up
cvs server: Diffing .
Index: kern_descrip.c
===================================================================
RCS file: /cvs/src/sys/kern/kern_descrip.c,v
retrieving revision 1.74
diff -u -p -r1.74 kern_descrip.c
--- kern_descrip.c      7 May 2006 20:12:41 -0000       1.74
+++ kern_descrip.c      5 Aug 2006 12:22:42 -0000
@@ -251,7 +251,8 @@ restart:
        if ((fp = fd_getfile(fdp, old)) == NULL)
                return (EBADF);
        if ((u_int)new >= p->p_rlimit[RLIMIT_NOFILE].rlim_cur ||
-           (u_int)new >= maxfiles)
+           (u_int)new >= maxfiles ||
+           (p->p_cred->p_ruid > 0 && (u_int)new >= maxusrfiles))
                return (EBADF);
        if (old == new) {
                /*
@@ -314,7 +315,8 @@ restart:
        case F_DUPFD:
                newmin = (long)SCARG(uap, arg);
                if ((u_int)newmin >= p->p_rlimit[RLIMIT_NOFILE].rlim_cur ||
-                   (u_int)newmin >= maxfiles) {
+                   (u_int)newmin >= maxfiles ||
+                   (p->p_cred->p_ruid > 0 && (u_int)newmin >= maxusrfiles)) {
                        error = EINVAL;
                        break;
                }
@@ -681,7 +683,8 @@ fdalloc(struct proc *p, int want, int *r
         * expanding the ofile array.
         */
 restart:
-       lim = min((int)p->p_rlimit[RLIMIT_NOFILE].rlim_cur, maxfiles);
+       lim = min((int)p->p_rlimit[RLIMIT_NOFILE].rlim_cur,
+               (p->p_cred->p_ruid > 0 ? maxusrfiles : maxfiles));
        last = min(fdp->fd_nfiles, lim);
        if ((i = want) < fdp->fd_freefile)
                i = fdp->fd_freefile;
@@ -795,7 +798,7 @@ restart:
                }
                return (error);
        }
-       if (nfiles >= maxfiles) {
+       if (nfiles >= maxfiles || ((p->p_cred->p_ruid > 0 && nfiles >= maxusrfiles))) {
                fd_unused(p->p_fd, i);
                tablefull("file");
                return (ENFILE);
Index: kern_sysctl.c
===================================================================
RCS file: /cvs/src/sys/kern/kern_sysctl.c,v
retrieving revision 1.142
diff -u -p -r1.142 kern_sysctl.c
--- kern_sysctl.c       28 May 2006 19:41:42 -0000      1.142
+++ kern_sysctl.c       5 Aug 2006 12:22:59 -0000
@@ -304,6 +304,8 @@ kern_sysctl(int *name, u_int namelen, vo
                return (sysctl_int(oldp, oldlenp, newp, newlen, &maxproc));
        case KERN_MAXFILES:
                return (sysctl_int(oldp, oldlenp, newp, newlen, &maxfiles));
+       case KERN_MAXUSRFILES:
+               return (sysctl_int(oldp, oldlenp, newp, newlen, &maxusrfiles));
        case KERN_NFILES:
                return (sysctl_rdint(oldp, oldlenp, newp, nfiles));
        case KERN_TTYCOUNT:



src/sys/sys directory:

==> cvs diff -up
cvs server: Diffing .
Index: file.h
===================================================================
RCS file: /cvs/src/sys/sys/file.h,v
retrieving revision 1.24
diff -u -p -r1.24 file.h
--- file.h      26 Mar 2006 17:47:10 -0000      1.24
+++ file.h      5 Aug 2006 12:24:01 -0000
@@ -107,6 +107,7 @@ struct file {
 LIST_HEAD(filelist, file);
 extern struct filelist filehead;       /* head of list of open files */
 extern int maxfiles;                   /* kernel limit on number of open files */
+extern int maxusrfiles;                       /* max num of open files for UID >= 1 */
 extern int nfiles;                     /* actual number of open files */
 extern struct fileops vnops;           /* vnode operations for files */

Index: sysctl.h
===================================================================
RCS file: /cvs/src/sys/sys/sysctl.h,v
retrieving revision 1.88
diff -u -p -r1.88 sysctl.h
--- sysctl.h    8 May 2006 22:51:18 -0000       1.88
+++ sysctl.h    5 Aug 2006 12:24:08 -0000
@@ -184,7 +184,8 @@ struct ctlname {
 #define        KERN_TIMECOUNTER        69      /* node: timecounter */
 #define        KERN_MAXLOCKSPERUID     70      /* int: locks per uid */
 #define        KERN_CPTIME2            71      /* array: cp_time2 */
-#define        KERN_MAXID              72      /* number of valid kern ids */
+#define KERN_MAXUSRFILES       72      /* int: max files for all UIDs >= 1 */
+#define        KERN_MAXID              73      /* number of valid kern ids */

 #define        CTL_KERN_NAMES { \
        { 0, 0 }, \
@@ -259,6 +260,7 @@ struct ctlname {
        { "timecounter", CTLTYPE_NODE }, \
        { "maxlocksperuid", CTLTYPE_INT }, \
        { "cp_time2", CTLTYPE_STRUCT }, \
+       { "maxusrfiles", CTLTYPE_INT }, \
 }

 /*


src/sys/conf directory:

==> cvs diff -up
cvs server: Diffing .
Index: param.c
===================================================================
RCS file: /cvs/src/sys/conf/param.c,v
retrieving revision 1.23
diff -u -p -r1.23 param.c
--- param.c     1 Jan 2004 20:17:34 -0000       1.23
+++ param.c     5 Aug 2006 12:24:57 -0000
@@ -88,6 +88,7 @@ int   maxproc = NPROC;
 #define        NVNODE (NPROC * 2 + NTEXT + 100)
 int    desiredvnodes = NVNODE;
 int    maxfiles = 3 * (NPROC + MAXUSERS) + 80;
+int    maxusrfiles = 3 * (NPROC + MAXUSERS) + 80 - 64; /* reserve 64 descriptors for root */
 int    nmbclust = NMBCLUSTERS;

 #ifndef MBLOWAT

